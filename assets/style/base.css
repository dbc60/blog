/* Base CSS for Hugo Restructured theme
 * -- loosely derived from html4css1.css from Docutils
 */

/*****************************************************************************/
/* Some basic settings
 * The color palette using CSS Custom Properties
 */
  :root {
  --color100: #dce8f7;
  --color200: #acc9ec;
  --color300: #7ca9e1;
  --color400: #4c8ad6;
  --color500: #2f75cc;
  --color600: #24599d;
  --color700: #193e6d;
  --color800: #0e233d;
  --color900: #03070d;
  --gray100: #fcfcfc;
  --gray125: #efefef;
  --gray150: #e3e3e3;
  --gray175: #d6d6d6;
  --gray200: #dedede;
  --gray250: #cecece;
  --gray300: #bfbfbf;
  --gray400: #a1a1a1;
  --gray500: #828282;
  --gray600: #636363;
  --gray700: #454545;
  --gray800: #262626;
  --gray900: #080808;
  /* text */
  /*--color500-complement: #a30052;*/
  --color500-complement: #cc862f;
  --color600-complement: #9d6824;

  /* Note: Adjacent colors are also called analogous colors */
  /* anchor hover */
  /*--color500-adjacent: #0062a3;*/
  --color500-adjacent: #259ca3;
  --color500-shade1: #255da3;
  --color500-shade1-complement: #a36b25;
  /* drop-caps */
  /*--color500-adjacent-complement: #a34100;*/
  --color500-adjacent-complement: #cc372f;
  --color500-shade1-adjacent-complement: #a32c25;

  /* reserved */
  --color700-complement: #00572b;
  --color700-adjacent: #003457;
  --color700-adjacent-complement: #572300;
  --color-border-left: #c4baad;

  /* Major components */
  --color-background-main: var(--gray150);
  --color-background-footer: var(--gray250);

  /* variations on #edeae6 from https://www.colorhexa.com/edeae6 */
  --color-background-contrast: #edeae6;
  --color-background-contrast-shade1: #e2ded7;
  --color-background-contrast-complement: #e6e9ed;
  --color-background-contrast-complement-shade1: #697b92;
  --color-background-code: var(--color-background-contrast-shade1);

  --color-background-table-head: var(--color-background-contrast-complement-shade1);
  --color-background-table-foot: var(--color-background-contrast-complement-shade1);
  --color-background-table-odd: var(--color100);
  --color-background-table-even: var(--color200);
  --color-background-sidebar: var(--color-background-contrast-shade1);

  /*--color-background-sidebar-highlight: hsla(162, 25%, 25%, 1);*/
  --color-background-sidebar-highlight: var(--color-background-contrast-complement-shade1);
  --color-border-bottom-code: #ddd7cf;
  --color-title: var(--color600);
  --color-anchor: var(--color600);
  --color-anchor-light: #362ec6;
  --color-anchor-hover: var(--color500-shade1-complement);
  --color-background-toc: var(--color-background-contrast-shade1);
  --color-border-toc: var(--gray900);
  --margin-toc-vertical: 1em;
  --margin-toc-left: 4%;
  --line-height-default: 1.5;

  /* Admonitions */
  --color-caution: #fafacc;
  --color-danger: #f30000;
}

/******************
  * General Layout *
  ******************/

html {
  scroll-behavior: smooth;
}

/* Per https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing border-box
    makes dealing with the sizes of elements much easier, and generally
    eliminates a number of pitfalls you can stumble on while laying out your
    content.*/
*,
::after,
::before {
  box-sizing: border-box;
}

/* Reset all "block-level" elements so we have a consistent base from which
    I can style the site. Today, there is a display property (for details see https://developer.mozilla.org/en-US/docs/Web/CSS/display) that can change traditional block-level elements to display like inline elements and vice versa.

    Note: See https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements for more information on block-level elements.

    See https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements for more information on inline-level elements.

    address, article, aside, blockquote, details, dialog, dd, div, dl, dt,
    fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header,
    hgroup, hr, li, main, nav, ol, p, pre, section, table, ul {
      margin: 0;
      padding: 0;
    }

    I'm removing elements from the reset list that I don't want to style or that I've already styled with margins and padding.
*/
address,
article,
aside,
blockquote,
details,
dialog,
div,
dl,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
hr,
main,
nav,
ol,
section,
table,
ul {
  margin: 0;
  padding: 0;
}

/* Reset a few additional elements for styling */
th,
td {
  margin: 0;
  padding: 0;
}

body {
  /* Try to avoid scrollbars on paragraphs: prevents long unbroken
   * un-hyphenatable lines from causing H-scrolling
   */
  overflow-wrap: break-word;
  scroll-padding-top: 100px;
}

pre.chroma {
  background-color: var(--color-background-code);
  width: 100%;
}

/*
  * The next three rules not only set the style for figure captions, but add an
  * automatic counter to the figures.
  */
.content {
  counter-reset: figures;
  counter-reset: tables;
}

figure {
  text-align: left;
  font-variant: small-caps;
  font-weight: bold;
  counter-increment: figures;
}

figcaption:before {
  content: 'Fig. ' counter(figures) '. ';
}

/* any "img" descendent of a figure.post-image */
figure.post-image img {
  display: block;
  max-width: 100%;
}

/* all images created with the "figure" shortcode
.post-image {
  border: 0.1rem solid var(--color-border-left);
  border-radius: 0.5em;
  padding: 0.1em;
}

/* I'm trying to set up a vertical rhythm on all pages where lines are comfortably and evenly spaced, the spacing between paragraphs are comfortable, headings are in proximity to the sections they head.

  Consistency
  Repetition
  Alignment
  Proximity

  I learned that Chrome & Firefox default to a line height of 16px. That is a   little small for my taste, so I'm bumping it up to 18px (16px * 1.125em). A line height of 1.5em is 27px (18px * 1.5em), so that sets the unit of the vertical rhythm to 27px, or 1.5em.

  Setting the font size to 1.125em (18px) seems to affect the meaning of 1em for all elements in the body. For example, setting the font size for the class siteTitle to 2.5em makes the text 45px.

  If I want to go back to 16px (I have new glasses now), then the line height should be (16px * 1.5em) = 24px. This is the vertical rhythm.

  I set the max-width to 120ch. In combination with ".sidebar-content" having
  "max-width: 16em;", the result is the main content has a width of about 95
  characters. This is fine. There are lots of studies about ideal line lengths.
  Some recommend a width of 45-80 characters, but that's for text on paper.
  For electronic test there are various studies that try to balance reading
  comprehension, glare, flicker, and scrolling/paging. From the Wikipedia
  page on line length (https://en.wikipedia.org/wiki/Line_length):

    Researchers have suggested that longer lines are better for quick scanning,
    while shorter lines are better for accuracy. Longer lines would then be
    better suited for cases when the information will likely be scanned, while
    shorter lines would be appropriate when the information is meant to be read
    thoroughly. One proposal advanced that, in order for on-screen text to have
    the best compromise between reading speed and comprehension, about 55 cpl
    should be used. On the other hand, there have been studies indicating that
    digital text at 100 cpl can be read faster than text with lines of 25
    characters, while retaining the same level of comprehension.

  There are too many choices and factors. I don't care anymore. I'm setting the
  width of the main content to 120ch, the max-width of the sidebar-content to
  32ch, and the width of "pre, code" blocks to 83ch. These values provide a
  fine width for the sidebar, the main content, and code blocks embedded in the
  main content.
*/
body {
  max-width: 120ch;
  overflow: auto;
  font-family: "Source Serif Pro", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 1.125em;
  background-color: var(--color-background-main);
  color: var(--gray900);
  margin: 0;
  padding: 1em;
  line-height: var(--line-height-default);
}

/* Vertical Rhythm: If the rhythm of the page is to be maintained, the spacing of paragraphs should be related to the basic line height unit. This is achieved simply by setting top and bottom margins equal to the line height. */
ol,
ul {
  margin-left: 0;
  padding-left: 1em;
}

/* Description List styles */
dt {
  font-weight: bold;
}

dd {
  margin-bottom: 1.5rem;
}

/*
  There is more fun that can be had with lists. For example, there is a neat
  timeline list at https://speckyboy.com/html-lists-style/
*/

/*
  When there is a change in text size, perhaps with a heading or sidenotes, the differing text should also take up a multiple of the basic leading. Each time you define the font-size for an element, you must also define the line-height to be a multiple of the leading, 27px.

  Here, 1em is 18px. So, if we want the site title to be 45px, or 2.5em, we must set the line height to 54px, which is 54/45 = 1.2em.
*/

.siteTitle {
  width: 100%;
  font-size: 2.5em;
  color: var(--color-title);
}

.siteSubTitle {
  width: 100%;
  font-size: 1.5em;
  line-height: 1;
  color: var(--color-title);
}

.title-content {
  margin-bottom: 1em;
}

/*
  Here I try to align the two columns, sidebar-content on the left and main-content on the right. They are both wrapped in .wrapper-content. First, I add a top margin to .wrapper-content to separate it from the breadcrump navigation bar.
*/
.wrapper-content {
  margin-top: 0.6em;
}

/*
  At this point, both columns are aligned on top, but the sidebar has a graphic that extends to its top, while the main content has text. They end up looking misalined. I add some top margin to the sidebar so push down the graphic and make it look like it's more aligned with any heading that appears in the main content.
*/
.sidebar-content {
  margin-top: 0.7em;
}

/* font-size: 36px=(18px * 2em), and a line-height of 54px=(36px * 1.5em) */
.title-article {
  font-size: 2em;
}

/*
  I don't think an h1 element should appear outside of the site title, which is styled via its ".siteTitle" class to make it more specific. In case it does I'll make it stand out.
*/
h1 {
  font-size: 12em;
}

/*
  The max font size is the site title at 45px (2.5em) and line-hieght of 54px (1.2em of the font-size).

  - Each title-article has a font-size of 36px (2em) and a line-height of 54px (1.5em of the font-size).
  - The font-size of each paragraph is 18px (1em) with a line-height of 27px (1.5em)

  With the above constraints, the headings h2 through h6 should be set betweeen 36px and 18px with line-heights of either 54px or 27px. I think that fits the guidelines for good vertical rhythm.

  - h2: font-size: 33px => 33/18 = 1.833em; line-height: 54px => 54/33 = 1.636em
  - h3: font-size: 30px => 30/18 = 1.667em; line-height: 54px => 54/30 = 1.8em
  - h4: font-size: 27px => 27/18 = 1.5em; line-height: 27px => 27/27 = 1em
  - h5: font-size: 24px => 24/18 = 1.333em; line-height: 27px => 27/24 = 1.125em
  - h6: font-size: 21px => 21/18 = 1.167em; line-height: 27px => 27/21 = 1.286em

  N.B.: MDN documentation on line-height (https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) says that specifying it in terms of "em" may produce unexpected results. It is better to specify it with a unitless <number> which is then multiplied by the element's own font size. The computed value is the same as the specified <number>. In most cases, this is the preferred way to set line-height and avoid unexpected results due to inheritance.
*/
h2 {
  font-size: 1.833em;
  margin-bottom: 0;
}

h3 {
  font-size: 1.667em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h2 + h3 {
  margin-top: 0;
}

h4 {
  font-size: 1.5em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h3 + h4 {
  margin-top: 0;
}

h5 {
  font-size: 1.333em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h4 + h5 {
  margin-top: 0;
}

h6 {
  font-size: 1.167em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h5 + h6 {
  margin-top: 0;
}

.main-footer {
  border-top: solid;
  margin-top: 1.2em;
  font-size: 80%;
  clear: both;
  background-color: var(--color-background-footer);
}

.main-footer > .container > a {
  color: var(--color-anchor-light);
}

.main-footer > .container > a:hover {
  color: var(--color-background-footer);
  background-color: var(--gray900);
}

.content.c-drop-caps:after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 0;
}

/*************************
  * Debug Border and Fill *
  *************************/
/*****************************
.wrapper-content > * {
  border: 2px solid #f08c00;
  background-color: #ffec99;
  border-radius: 5px;
  padding: 10px;
}

.main-content > * {
  border: 2px solid #8c00f0;
  background-color: #fca9ff;
  border-radius: 5px;
  padding: 10px;
}
*****************************/
