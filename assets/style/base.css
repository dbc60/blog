/* Base CSS for Hugo Restructured theme
 * -- loosely derived from html4css1.css from Docutils
 */

/*****************************************************************************/
/* Some basic settings
 * The color palette using CSS Custom Properties
 */
:root {
  --color100: #dce8f7;
  --color200: #acc9ec;
  --color300: #7ca9e1;
  --color400: #4c8ad6;
  --color500: #2f75cc;
  --color600: #24599d;
  --color700: #193e6d;
  --color800: #0e233d;
  --color900: #03070d;
  --gray100: #fcfcfc;
  --gray125: #efefef;
  --gray150: #e3e3e3;
  --gray175: #d6d6d6;
  --gray200: #dedede;
  --gray250: #cecece;
  --gray300: #bfbfbf;
  --gray400: #a1a1a1;
  --gray500: #828282;
  --gray600: #636363;
  --gray700: #454545;
  --gray800: #262626;
  --gray900: #080808;
  /* text */
  /*--color500-complement: #a30052;*/
  --color500-complement: #cc862f;
  --color600-complement: #9d6824;

  /* Note: Adjacent colors are also called analogous colors */
  /* anchor hover */
  /*--color500-adjacent: #0062a3;*/
  --color500-adjacent: #259ca3;
  --color500-shade1: #255da3;
  --color500-shade1-complement: #a36b25;
  /* drop-caps */
  /*--color500-adjacent-complement: #a34100;*/
  --color500-adjacent-complement: #cc372f;
  --color500-shade1-adjacent-complement: #a32c25;

  /* reserved */
  --color700-complement: #00572b;
  --color700-adjacent: #003457;
  --color700-adjacent-complement: #572300;
  --color-border-left: #c4baad;

  /* Major components */
  --background-main-default: var(--gray150);
  --background-main-alternate-gray: var(--gray200);
  --background-main-shadow-gray: var(--gray300);
  --background-main-alternate-color: var(--color200);

  /* variations on #edeae6 from https://www.colorhexa.com/edeae6 */
  --background-contrast: #edeae6;
  --background-contrast-shade1: #e2ded7;
  --background-contrast-complement: #e6e9ed;
  --background-contrast-complement-shade1: #697b92;
  --background-code: var(--background-contrast-shade1);

  --background-table-head: var(--background-contrast-complement-shade1);
  --background-table-foot: var(--background-contrast-complement-shade1);
  --background-table-odd: var(--color100);
  --background-table-even: var(--color200);
  --background-sidebar: var(--background-contrast-shade1);
  --background-toc: var(--background-contrast-shade1);
  --background-sidebar-highlight: var(--background-contrast-complement-shade1);

  /*--background-sidebar-highlight: hsla(162, 25%, 25%, 1);*/
  --color-title: var(--color600);
  --color-anchor: var(--color600);
  --color-anchor-light: #362ec6;
  --color-anchor-hover: var(--color500-shade1-complement);
  --color-border-bottom-code: #ddd7cf;
  --color-border-toc: var(--gray900);
  --color-border-admonition: var(--background-main-shadow-gray);
  --margin-toc-vertical: 0.5em;
  --margin-toc-left: 4%;

  /* Social Media */
  --color-twitter: #1da1f2;
  --color-linkedin: #0077b5;
  --color-youtube: #ff0000;
  --color-pinterest: #e60023;
  --color-tumblr: #35465C;
  --color-hackernews: #ff6600;
  --color-instagram: #8a3ab9;
  --color-stackoverflow: #f47f24;
  --color-reddit: #ff4500;
  --color-email: var(--gray900);
  --color-rss: var(--gray800);
  --color-facebook: #4267b2;
  --color-github: #333;

  /* Admonitions */
  --color-caution: #fafacc;
  --color-danger: #f30000;
  --line-height-default: 1.5;

  /* space between hero image, masthead, wrapper-content, and wrapper-footer */
  --section-spacer: 0.6em;

  --font-family-body-default: "system-stack", "Calisto MT", "Bookman Old Style", Georgia, serif;
}

/******************
  * General Layout *
  ******************/

/*
 * I'm not sure that I want to use smooth scrolling. If I ever want to, the
 * property is "scroll-behavior: smooth;".
 *
 * Settings for "box-sizing" are per "Inheriting box-sizing Probably Slightly
 * Better Best-Practice" at:
 *
 *   (https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/)
 *
 * I'm also placing `font-size` here, because `rem` units are relative to the
 * root, which is the setting on the html tag.
 */
html {
  box-sizing: border-box;
  font-size: 100%;
}
*, *:before, *:after {
  box-sizing: inherit;
  font-size: 100%;
}

/* Reset padding and margin on all "block-level" elements so I have a
 * consistent base from which I can style my site. Note, there is a display
 * property (for details see
 *
 *  https://developer.mozilla.org/en-US/docs/Web/CSS/display)
 *
 * that can change traditional block-level elements to display like inline
 * elements and vice versa.
 *
 *  Note: for more information on block-level elements, see
 *
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements
 *
 * For more information on inline-level elements, see
 *
 * https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements
 *
 * The full set of elemeents in a padding/margin reset is:
 *
 *  address, article, aside, blockquote, details, dialog, dd, div, dl, dt,
 *  fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header,
 *  hgroup, hr, li, main, nav, ol, p, pre, section, table, ul {
 *    margin: 0;
 *    padding: 0;
 *  }
 *
 * I'm removing elements from the reset list that I don't want to style or
 * that I've already styled with margins and padding. These elements are:
 *
 *    dd, dt, p, pre
*/
address, article, aside, blockquote, details, dialog, div, dl, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hgroup, hr, main, nav, ol, section, table, td, th, ul {
  margin: 0;
  padding: 0;
}

/* Prevent images from blowing out their container */
img {
  max-width: 100%;
}

/*
 * I'm trying to set up a vertical rhythm on all pages where lines are
 * comfortably and evenly spaced, the spacing between paragraphs are
 * comfortable, headings are in proximity to the sections they head. I want to
 * do this while keeping in mind these four layout principles.
 *
 *    Consistency
 *    Repetition
 *    Alignment
 *    Proximity
 *
 * There are 2 basic steps to creating a vertical rhythm, and some adjustments
 * to the most rigid definition of a baseline.
 *
 *    1. Establish a baseline.
 *    2. Ensure all vertical margins, paddings, and borders used add up to a
 * multiple of the baseline.
 *
 * The baseline is often defined as the line height body text. A general rule
 * is the line height should be between 1.2 and 1.5 times the font size to
 * provide comfortable reading-space between lines. I learned that Chrome &
 * Firefox default to a line height of 16px. That is a little small for my
 * taste, so I'm bumping it up to 18px (16px * 1.125em). A line height of
 * 1.5em is 27px (18px * 1.5em), so that sets the unit of the vertical rhythm
 * to 27px, or 1.5em.
 *
 * Vertical Rhythm: If the vertical rhythm of the page is to be maintained,
 * the spacing of text should be related to the line height. Maintaining a
 * consistent vertical rhythm is then accomplished by ensuring all vertical
 * margins, paddings and borders used add up to a multiple of the line height.
 *
 * Setting the font size to 1.125em (18px) seems to affect the meaning of 1em
 * for all elements in the body. For example, setting the font size for the
 * class siteTitle to 2.5em makes the text 45px.
 *
 * If I want to go back to 16px (I have new glasses now), then the line height
 * should be (16px * 1.5em) = 24px. This is the vertical rhythm.
 *
 * I set the max-width to 120ch. In combination with ".sidebar-content" having
 * "max-width: 16em;", the result is the main content has a width of about 95
 * characters. This is fine. There are lots of studies about ideal line
 * lengths.
 *
 * Some recommend a width of 45-80 characters, but that's for text on paper.
 * For electronic test there are various studies that try to balance reading
 * comprehension, glare, flicker, and scrolling/paging. From the Wikipedia
 * page on line length (https://en.wikipedia.org/wiki/Line_length):
 *
 *    Researchers have suggested that longer lines are better for quick
 *    scanning, while shorter lines are better for accuracy. Longer lines
 *    would then be better suited for cases when the information will likely
 *    be scanned, while shorter lines would be appropriate when the
 *    information is meant to be read thoroughly. One proposal advanced that,
 *    in order for on-screen text to  have the best compromise between reading
 *    speed and comprehension, about 55 cpl should be used. On the other hand,
 *    there have been studies indicating that digital text at 100 cpl can be
 *    read faster than text with lines of 25 characters, while retaining the
 *    same level of comprehension.
 *
 * There are too many choices and factors. I don't care anymore. I'm setting
 * the width of the main content to 120ch, the max-width of the
 * sidebar-content to 32ch, and the width of "pre, code" blocks to 83ch. These
 * values provide a fine width for the sidebar, the main content, and code
 * blocks embedded in the main content.
*/
body {
  /* Try to avoid scrollbars on paragraphs: prevents long unbroken
   * un-hyphenatable lines from causing H-scrolling
   */
  overflow-wrap: break-word;
  scroll-padding-top: 100px;
  max-width: 120ch;
  overflow: auto;
  /* IE 8 doesn't support local @font-face rules */
  font-family: var(--font-family-body-default);
  line-height: var(--line-height-default);
  margin: var(--body-margin-default);
  padding: 1em;
  background-color: var(--background-main-default);
  color: var(--gray900);
}

pre.chroma {
  width: 100%;
}

/*
  * The next three rules not only set the style for figure captions, but add an
  * automatic counter to the figures.
  */
.content {
  counter-reset: figures;
  counter-reset: tables;
  counter-reset: videos;
}

figure {
  text-align: left;
  font-variant: small-caps;
  font-weight: bold;
}

video {
  max-width: 100%;
  height: auto;
}

figure.post-image {
  counter-increment: figures;
  margin-bottom: var(--section-spacer);
}

.video-shortcode+figcaption {
  counter-increment: videos;
  margin-bottom: var(--section-spacer);
}

figure.post-image figcaption::before{
  content: 'Fig. ' counter(figures) '. ';
}

.video-shortcode+figcaption::before {
  content: 'Video ' counter(videos) '. ';
}

/* any "img" descendent of a figure.post-image */
figure.post-image img {
  display: block;
}

/* any "img" descendent of a .video-shortcode */
.video-shortcode img {
  display: block;
}

.video-unsupported {
  color: var(--color-danger);
}

figure.video {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  counter-increment: videos;
}

figure.video figcaption::before {
  content: 'Video ' counter(videos) '. ';
}

figure.video iframe {
  position: absolute;
  top: 0;
  left: 0;
  height: 94%;
  width: 100%;
  border: 0;
}

figure.video figcaption {
  position: absolute;
  bottom: 0;
  height: 6%;
  width: 100%;
}

/*
 * Stopping and Starting an Animated GIF from CSS Tricks, Pausing a GIF with
 * details/summary, https://css-tricks.com/pause-gif-details-summary/
 */
.object-and-details {
  display: inline-block;
  position: relative;
  overflow: hidden;
}

summary {
  color: #fff;
  background: #000;
  width: 2rem;
  height: 2rem;
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  z-index: 2;
  border-radius: 50%;
  background-image: url("/svg/pause_circle_filled-24px.svg");
  background-size: 90% auto;
  background-repeat: no-repeat;
  background-position: center;
  background-color: white;
}

[open] summary {
  background-image: url("/svg/play_circle_filled-24px.svg");
  box-shadow: 0 0 0 2px white;
  background-color: white;
}

/* for blink/webkit */
details summary::-webkit-details-marker {
  display: none;
}
/* for firefox */
details > summary:first-of-type {
  list-style: none;
}

summary + * {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 1rem;
  padding-top: 3rem;
  color: #fff;
  overflow-y: auto;
}

summary + * a {
  color: #fff;
}

summary:focus {
  box-shadow: 0 0 0 0.25rem #aade87;
  outline: transparent;
}

.object-and-details1 img {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  overflow: hidden;
}

ol,
ul {
  margin-left: 0;
  margin-top: 1em;
  margin-bottom: 1em;
  padding-left: 1em;
}

li ul, li ol {
  margin-top: 0;
  margin-bottom: 0;
}

/* Description List styles */
dt {
  font-weight: bold;
}

dd {
  margin-bottom: 1rem;
  margin-inline-start: 1rem;
}

/*
  There is more fun that can be had with lists. For example, there is a neat
  timeline list at https://speckyboy.com/html-lists-style/
*/

/*
  When there is a change in text size, perhaps with a heading or sidenotes, the differing text should also take up a multiple of the basic leading. Each time you define the font-size for an element, you must also define the line-height to be a multiple of the leading, 27px.

  Here, 1em is 18px. So, if we want the site title to be 45px, or 2.5em, we must set the line height to 54px, which is 54/45 = 1.2em.
*/

.siteTitle {
  width: 100%;
  font-size: 2.5em;
  color: var(--color-title);
}

.siteSubTitle {
  width: 100%;
  font-size: 1.5em;
  line-height: 1;
  color: var(--color-title);
}

.title-content {
  margin-bottom: 1em;
}

/* font-size: 36px=(18px * 2em), and a line-height of 54px=(36px * 1.5em) */
.title-article {
  font-size: 2em;
}

/*
  I don't think an h1 element should appear outside of the site title, which is styled via its ".siteTitle" class to make it more specific. In case it does I'll make it stand out.
*/
h1 {
  font-size: 12em;
}

/*
  The max font size is the site title at 45px (2.5em) and line-hieght of 54px (1.2em of the font-size).

  - Each title-article has a font-size of 36px (2em) and a line-height of 54px (1.5em of the font-size).
  - The font-size of each paragraph is 18px (1em) with a line-height of 27px (1.5em)

  With the above constraints, the headings h2 through h6 should be set betweeen 36px and 18px with line-heights of either 54px or 27px. I think that fits the guidelines for good vertical rhythm.

  - h2: font-size: 33px => 33/18 = 1.833em; line-height: 54px => 54/33 = 1.636em
  - h3: font-size: 30px => 30/18 = 1.667em; line-height: 54px => 54/30 = 1.8em
  - h4: font-size: 27px => 27/18 = 1.5em; line-height: 27px => 27/27 = 1em
  - h5: font-size: 24px => 24/18 = 1.333em; line-height: 27px => 27/24 = 1.125em
  - h6: font-size: 21px => 21/18 = 1.167em; line-height: 27px => 27/21 = 1.286em

  N.B.: MDN documentation on line-height (https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) says that specifying it in terms of "em" may produce unexpected results. It is better to specify it with a unitless <number> which is then multiplied by the element's own font size. The computed value is the same as the specified <number>. In most cases, this is the preferred way to set line-height and avoid unexpected results due to inheritance.
*/
h2 {
  font-size: 1.833em;
  margin-top: 1rem;
}

h3 {
  font-size: 1.667em;
  margin-top: 1rem;
}

/* close the gap on adjacent headings */
h2 + h3 {
  margin-top: 0;
}

h4 {
  font-size: 1.5em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h3 + h4 {
  margin-top: 0;
}

h5 {
  font-size: 1.333em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h4 + h5 {
  margin-top: 0;
}

h6 {
  font-size: 1.167em;
  margin-bottom: 0;
}

/* close the gap on adjacent headings */
h5 + h6 {
  margin-top: 0;
}

.main-footer {
  border-top: solid;
  font-size: 80%;
  clear: both;
  background-color: var(--background-main-alternate-gray);
}

.main-footer > .container > a {
  color: var(--color-anchor-light);
}

.main-footer > .container > a:hover {
  color: var(--background-main-alternate-gray);
  background-color: var(--gray900);
}

/* this actually affects after the content section. It has no effect on the drop-caps letter itself */
/* .content.c-drop-caps::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 0;
} */

/* 100 Days to Offload Challenge */
.days {
  margin-top: var(--section-spacer);
  font-size: 80%;
  background-color: var(--background-code);
}

.featured-copyright {
  font-size: 80%;
}

/* SVG for static/scripts/plot.js */
path { stroke: black; stroke-width: 2; fill: none; }
svg {margin: 1.5em auto; display: block;}
svg button {position: absolute; right: 0; bottom: 0;}
svg .plot {display: none; margin: 1em;}
svg .plot thead {font-size: 110%; color: #888a85;}
svg .plot em {font-variant: small-caps; font-style: normal;}
svg .plot th {padding-right: 1em; font-style: italic;}

/* Place a separator between every pair of navigation links */
.main-nav__link + .main-nav__link {
  border-left-width: 2px;
  border-left-style: solid;
  border-left-color: var(--color600);
  padding-left: 0.25em;
}

/*************************
  * Debug Border and Fill *
  *************************/
/*****************************
.wrapper-content > * {
  border: 2px solid #f08c00;
  background-color: #ffec99;
  border-radius: 5px;
  padding: 10px;
}

.main-content > * {
  border: 2px solid #8c00f0;
  background-color: #fca9ff;
  border-radius: 5px;
  padding: 10px;
}
*****************************/
