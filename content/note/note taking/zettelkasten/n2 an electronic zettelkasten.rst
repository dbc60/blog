##########################
An Electronic Zettelkasten
##########################

It would be nice to have a tool that kept an index of notes similar to Zettelkasten. What I think I'd want from such a tool, is:

* ID: assign a unique identifier to each note and sequence of notes for a particular thought
* Branching: keep links for branches of a particular thought in a topic tree
* Links/References: allow me to make direct links from one card to another in a different branch of the tree to help me remember relationships between branches
* also have a backlink so I can see which cards link to a given card.
* Tag Register: be able to create cards which contain links to other cards like a bibliography
* be able to embed the contents of a card (either in its entirety or just one or more selected section - in which case the referenced card should probably be divided into a sequence of cards). Remember the Sheets Hypercode Editor (by Robert Stockton and Nick Kramer) that was a kind of literate programming environment? It operated by dividing code into small self-contained objects called *fragments* and organizing them within file-like containers the authors called *sheets*. That was quite an experiment. I imagine that notes could be organized in a similar fashion, and possibly more successfully than code. There was also "Code Bubbles" which
* Record and retain meta data, like a timestamp for when a note was created, and when it was last modified. Certainly, the note's ID and the IDs of notes it references should be accessible. Maybe even backlinks, so one can see which notes references a given one. I don't think version history is necessary.
* Keep tables/lists of links, note sequences (perhaps in an outline format), keywords (the tag register), authors (for keeping a list of references when writing books or articles), a titles section containing a complete list of notes, clusters and bookmarks. Clusters could be related topics that are being put together for the development of an article or a book.
* generate an index of cards
* accept plain text input formats, such as `reStructuredText <http://docutils.sourceforge.net/rst.html>`_ (RST, ReST or `reST <https://en.wikipedia.org/wiki/ReStructuredText>`_) and Markdown.
* be able to display more than plain text

  * computer source code
  * execute algorithms ala' jupyter notebooks
  * mathematical equations
  * animations
  * graphs
  * musical notation
  * sounds from sound files, or generated by algorithms
  * images from image files, or generated by algorithms
  * videos from video files, or generated by algorithms
  * SIMILE Timelines

Perhaps have a WYSIWYG mode as well as being able to write markup directly. I know I find `Jekyll <https://jekyllrb.com/>`_ somewhat irritating because it takes a very long time to generate a freshly updated page. ConnectedText has a feature that lets you select custom colors for specific markup. Basically, it's a way to customize its syntax highlighter. Coloring the markup might make it easier to read content, as your eyes can skip over markup for things like comments, internal and external links, headings, includes and other commands.

Can a note's ID be just a number, where each new note is assigned the next integer is a global sequence? Does a more complicated ID scheme, like the one Luhmann used for his physical Zettelkasten, add any functionality without adding any undue complexity? Probably not. It should be easy for an electronic Zettelkasten to keep notes along the same thought in sequence. In fact, it could be a feature where each new note is created as a continuation of a thought or a branch. Of course, you shouldn't have to determine the new notes position in a sequence before its written, and you should be able to move it around or somehow designate a collection of notes as a sequence, if you so desire - even reordering the notes within a sequence at some later time.
